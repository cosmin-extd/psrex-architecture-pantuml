@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
' uncomment the following line and comment the first to use locally
' !include C4_Component.puml
!include <tupadr3/common>
!include <tupadr3/devicons/mysql>
!include <C4/C4_Container>
!include <logos/rabbitmq>

LAYOUT_WITH_LEGEND()

title Component Diagram for PSO
Container_Boundary(ehm-container, "EHM Service") {
   Component_Ext(EHM_prescriptions_human, "EHM", "Fetch human prescriptions")
   Component_Ext(EHM_prescriptions_animal, "EHM", "Fetch animal prescriptions")
   Component_Ext(EHM_fullmarkt, "EHM", "Fetch fullmarkt info")
   Component_Ext(EHM_patient_info, "EHM", "Fetch patient info")
   Component_Ext(EHM_HS, "EHM HS", "Fetch Exchange article info")
}

Component_Ext(NLLEHM, "NLL EHM Service", "Patients and prescriptions are fetched from EHM.")
Component_Ext(varaehm, "Vara EHM (FTP) service", "-")
Component_Ext(integrate, "Integration", "Integration for articles sync. Customers importing articles.")

Person(individual, "Individual buying drugs", "User individual requesting prescription page.")
Person(individual2, "Pharmacy employee", "Pharmaceut or technician.")

DEV_MYSQL(dbpso,PSO DB,database)
DEV_MYSQL(dbpsrexarticles,PSREX Articles DB,database)

queue "<$rabbitmq>" as rabbit
queue "<$rabbitmq>" as rabbit2

Container_Boundary(app2, "Pharma Suite") {
   Component(dotnetclient, ".NET Client", "C#", ".NET Client")
   Container_Boundary(psrexarticles-container, "PSREX Articles") {
      Component(psrexarticles, "PSREX Articles Import", "Java module", "Stores article information.")
      Component(articlesearch, "PSREX Articles Search", "Java module", "Stores article information.")
   }
   Component(vara, "VARA Connect", "Part of PSREX Server Java module", "VARA Connect.")
   Component(psrexserver, "PSREX Server", "Java module", "Manages expeditions of prescriptions, dose production and orders from eCommerce (PhOMS).")
   Rel(dotnetclient, psrexarticles, "Uses","SOAP API")
   Rel(individual2, dotnetclient, "Uses","UI Client")
   Rel(psrexarticles, dbpsrexarticles, "Uses","DB")
   Rel(articlesearch, dbpsrexarticles, "Uses","DB")
   Rel(psrexarticles, rabbit2, "Pulls article info from Queue","C.4")
   Rel(psrexserver, rabbit2, "Pushes article info to Queue","C.3")
   
   Rel(psrexserver, EHM_prescriptions_human, "-","-")
   Rel(psrexserver, EHM_patient_info, "-","-")

}

Container_Boundary(app, "PSO Components") {
Component(asab, "ASAB", "Java internal dependency", "ASAB JAR.")
Component(pharmaEhmFhirClient, "pharma-schemas-ehm", "Java internal dependency", "pharma-schemas-ehm PharmaEhmFhirClient project for NLL.")
Component(hapinllehm, "HAPI", "Java external dependency", "HAPI FHIR client (NLL)")
Component(rcl, "PSO", "Java", "PSO")
Component(rclCPP, "Web UI", "Java", "Web UI.")
Component(psoImportAPI, "Import API", "Java", "Import API.")

Rel(asab, EHM_prescriptions_human, "orwsService","API")
Rel(asab, EHM_prescriptions_animal, "rrdwsService","API")
Rel(asab, EHM_fullmarkt, "folkwsService","API")
Rel(asab, EHM_patient_info, "axswsService","API")
Rel(asab, EHM_HS, "varawsService","API")

Rel(individual, rclCPP, "Uses","API")
Rel(rcl, dbpso, "Uses","DB")
Rel(rcl, rabbit, "Uses","Queue")
'Rel(rcl, asab, "Uses","dependency")
'Rel(rcl, hapinllehm, "Uses","dependency")
Rel(integrate, psoImportAPI, "Uses API","A.1, C.6")
Rel(integrate, vara, "Uses API","B.1")
Rel(vara, psoImportAPI, "Uses API","B.2")


}

'Rel(integrate, dbpso, "Uses","DB")
'Rel(integrate, dbpsrexarticles, "Uses","DB")
Rel(varaehm, vara, "Uses API","C.1")
Rel(vara, psrexserver, "Is part of PSREX Server Java module","C.2")
Rel(psrexarticles, integrate, "Uses API","C.5")

Rel(hapinllehm, NLLEHM, "Uses","API")
Rel(pharmaEhmFhirClient, NLLEHM, "Uses","API")

Rel(psrexserver, NLLEHM, "Uses","API")


@enduml