@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
' uncomment the following line and comment the first to use locally
' !include C4_Component.puml
!include <tupadr3/common>
!include <tupadr3/devicons/mysql>
!include <C4/C4_Container>
!include <logos/rabbitmq>

LAYOUT_WITH_LEGEND()

title Component Diagram for PSO
Container_Boundary(ehm-container, "EHM Service") {
   Component_Ext(eHM_prescriptions_human, "EHM", "Fetch human prescriptions")
   Component_Ext(eHM_prescriptions_animal, "EHM", "Fetch animal prescriptions")
   Component_Ext(eHM_fullmarkt, "EHM", "Fetch fullmarkt info")
   Component_Ext(eHM_patient_info, "EHM", "Fetch patient info")
   Component_Ext(eHM_HS, "EHM HS", "Fetch Exchange article info")
}

Component_Ext(NLLEHM, "NLL EHM Service", "Patients and prescriptions are fetched from EHM.")
Component_Ext(varaehm, "Vara EHM (FTP) service", "-")
Component_Ext(integrate, "Integration", "Integration for articles sync. Customers importing articles.")

Person(individual, "Individual buying drugs", "User individual requesting prescription page.")
Person(individual2, "Pharmacy employee", "Pharmaceut or technician.")

DEV_MYSQL(dbpso,PSO DB,database)
DEV_MYSQL(dbpsrexarticles,PSREX Articles DB,database)

queue "<$rabbitmq>" as rabbit
queue "<$rabbitmq>" as rabbit2

Container_Boundary(app2, "Pharma Suite") {
   Component(dotnetclient, ".NET Client", "C#", ".NET Client")
   Container_Boundary(psrexarticles-container, "PSREX Articles") {
      Component(psrexarticles, "PSREX Articles Import", "Java module", "Stores article information.")
      Component(articlesearch, "PSREX Articles Search", "Java module", "Stores article information.")
   }
   Component(vara, "VARA Connect", "Part of PSREX Server Java module", "VARA Connect.")
   Component(psrexarchive, "PSREX Archive", "Spring Boot module", "Archives expeditions & orders.")
   Component(psrexreservations, "PSREX Reservations", "Spring Boot module", "Manages reservations orders, customer orders & booking requests.")
   Component(psrexstores, "PSREX Stores", "Spring Boot module", "Manages stores information.")
   Component(psrexauth, "PSREX Auth", "Spring Boot module", "Manages users.")

   Component(psrexserver, "PSREX Server", "JavaEE/Wildfly module", "Manages expeditions of prescriptions, dose production and orders from eCommerce (PhOMS).")

}

Container_Boundary(app, "PSO Components") {
Component(asab, "ASAB", "Java internal dependency", "ASAB JAR.")
Component(pharmaEhmFhirClient, "pharma-schemas-ehm", "Java internal dependency", "pharma-schemas-ehm PharmaEhmFhirClient project for NLL.")
Component(hapinllehm, "HAPI", "Java external dependency", "HAPI FHIR client (NLL)")
Component(rcl, "PSO", "Java", "PSO")
Component(rclCPP, "Web UI", "Java", "Web UI.")
Component(psoImportAPI, "Import API", "Java", "Import API.")

}

'(A)[without B]Import acticle flows
Rel(psrexarticles, rabbit2, "Pulls article info from Queue","C.4")
Rel(psrexserver, rabbit2, "Pushes article info to Queue","C.3")
Rel(integrate, psoImportAPI, "REST API","A.1, C.6")
Rel(integrate, vara, "Uses API","B.1")
Rel(vara, psrexserver, "Is part of PSREX Server Java module","C.2")
Rel(varaehm, vara, "Uses API","C.1")
Rel(psrexarticles, dbpsrexarticles, "Uses","DB")
Rel(articlesearch, dbpsrexarticles, "Uses","DB")

'(B.1)[without A]Relations with EHM external services - prescriptions & patientinfo
Rel(asab, eHM_prescriptions_human, "orwsService","API")
Rel(asab, eHM_prescriptions_animal, "rrdwsService","API")
Rel(asab, eHM_fullmarkt, "folkwsService","API")
Rel(asab, eHM_patient_info, "axswsService","API")
Rel(asab, eHM_HS, "varawsService","API")
Rel(psrexserver, eHM_prescriptions_human, "-","-")
Rel(psrexserver, eHM_patient_info, "-","-")

'(B.2)[without A]Relations with EHM external services - vara & NLL
Rel(varaehm, vara, "Uses API","C.1")   
Rel(psrexserver, NLLEHM, "Uses","API")
Rel(pharmaEhmFhirClient, NLLEHM, "Uses","API")
Rel(hapinllehm, NLLEHM, "Uses","API")

'(C.1)Pharma Suite
Rel(psrexserver, psrexreservations, "REST","-")
Rel(psrexserver, psrexstores, "REST","-")
Rel(psrexserver, psrexarchive, "REST","-")
Rel(psrexarticles, psrexauth, "REST","-")
Rel(psrexauth, psrexstores, "REST","-")
Rel(psrexserver, psrexauth, "REST","-")

'(C.2)Others
Rel(dotnetclient, articlesearch, "Uses","SOAP API")
Rel(individual2, dotnetclient, "Uses","UI Client")
Rel(individual, rclCPP, "Uses","API")
Rel(rcl, dbpso, "Uses","DB")
Rel(rcl, rabbit, "Uses","Queue")



@enduml